-*- mode: org; mode: visual-line; -*-
#+STARTUP: indent

* Clojure for Node for Max
** Introduction

These are the first steps towards booting up ClojureScript inside Node for Max, including a network REPL so that we can live-code through Node.js into the Max world.

** Setup

- To start, pure Node.js - no Max involvement yet
- Following instructions: [[https://lambdaisland.com/blog/2017-05-02-nodejs-scripts-clojurescript]] - the Node.js section

** Compile and Run: First Shot (=first-shot=)

A very simple setup without any REPL support. Latest Clojure and ClojureScript.

- =project.clj= is set up to compile from =src-cljs= into =main.js=
- Compile using =lein cljsbuild once=
- Run with =node main.js=
- To avoid confusion, we've removed the =src= directory used by default for (Java) Clojure source

** First Figwheel (=figwheel-test=)

- First test with "classic" Figwheel, under Leiningen: REPL works.

** First Figwheel Main (=figwheel-main-test=)

- First test with Figwheel Main, under Leiningen. REPL works.

** Figwheel Main By Hand (=hand-thrown=)

- Another Figwheel Main setup, using CLI Tools rather than Leiningen, to simplify the setup, make it closer to the Figwheel Main documentation, make the configuration more explicit, and maybe have a better chance to get a network REPL off the ground.

** Issues

- =lein cljsbuild once= seems to be busted; use =lein cljsbuild auto= instead
- Don't need to set up =target= in CLASSPATH: we don't have a web server that needs access to compiled JS
